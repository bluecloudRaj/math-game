{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pages/error404/error404.component.css","webpack:///./src/app/pages/error404/error404.component.html","webpack:///./src/app/pages/error404/error404.component.ts","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/play/game/game.component.css","webpack:///./src/app/pages/play/game/game.component.html","webpack:///./src/app/pages/play/game/game.component.ts","webpack:///./src/app/pages/play/play.component.css","webpack:///./src/app/pages/play/play.component.html","webpack:///./src/app/pages/play/play.component.ts","webpack:///./src/app/pages/play/players/players.component.css","webpack:///./src/app/pages/play/players/players.component.html","webpack:///./src/app/pages/play/players/players.component.ts","webpack:///./src/app/services/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PlayComponent } from './pages/play/play.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { Error404Component } from './pages/error404/error404.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, pathMatch: 'full' },\n  { path: 'game/:playerName', component: PlayComponent },\n  { path: '**', component: Error404Component }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container col-md-6 text-center\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PlayComponent } from './pages/play/play.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomeComponent } from './pages/home/home.component';\nimport { Error404Component } from './pages/error404/error404.component';\nimport { GameComponent } from './pages/play/game/game.component';\nimport { PlayersComponent } from './pages/play/players/players.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlayComponent,\n    HomeComponent,\n    Error404Component,\n    GameComponent,\n    PlayersComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    NgbModule.forRoot(),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p class=\\\"padding-top-lg\\\">\\n  <img width=\\\"300\\\" alt=\\\"404 page not found\\\" src=\\\"assets/images/404.svg\\\">\\n</p>\\n<p>\\n  Page not found\\n</p>\\n<p>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" routerLink=\\\"\\\">\\n    Home\\n  </button>\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error404',\n  templateUrl: './error404.component.html',\n  styleUrls: ['./error404.component.css']\n})\nexport class Error404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>\\n  Welcome to Math Game!\\n</h1>\\n\\n<p>A realtime browser-based math game for up to 10 concurrent users</p>\\n\\n<p>\\n  <img width=\\\"200\\\" alt=\\\"Math game logo\\\" src=\\\"assets/images/logo.svg\\\">\\n</p>\\n\\n<h2>Challenge</h2>\\n<p class=\\\"text-justify\\\">You will be presented with a simple math question, consisting of a basic operation (+ - * /), two operands in range 1..10\\n  and a potential answer. Your goal is to tell whether the proposed answer is correct as fast as possible, using a simple\\n  yes/no choice.</p>\\n\\n<h2>Scoring</h2>\\n<p class=\\\"text-justify\\\">The first player to submit a correct answer gets 1 point for the round and completes the round. All incorrect answers subtract\\n  a point from the players' score. Correct late answers do not affect the score. After completing the round all players are\\n  informed that the round is over and a new round starts in 5 seconds after the end of last one.</p>\\n\\n<form (ngSubmit)=\\\"join()\\\" #joinForm=\\\"ngForm\\\">\\n  <div class=\\\"form-group input-group pt-2 pb-2\\\">\\n    <input type=\\\"text\\\" name=\\\"playerName\\\" class=\\\"form-control\\\" placeholder=\\\"Player's name\\\" [(ngModel)]=\\\"playerName\\\" required>\\n    <div class=\\\"input-group-append\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg\\\" [disabled]=\\\"!joinForm.form.valid\\\">\\n        Join\\n      </button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  playerName: string;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  join() {\n    this.router.navigate(['game', this.playerName]);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-2 pb-2\\\" *ngIf=\\\"!isGameFull\\\">\\n  <ngb-progressbar [type]=\\\"isRoundOpen ? 'primary' : 'warning'\\\" type=\\\"primary\\\" [value]=\\\"progress\\\">\\n  </ngb-progressbar>\\n</div>\\n<div class=\\\"container\\\" *ngIf=\\\"!challenge && !isGameFull\\\">\\n  <h2>Connected!</h2>\\n  <h3>Waiting for the first challenge...</h3>\\n</div>\\n<div class=\\\"container\\\" *ngIf=\\\"isGameFull\\\">\\n  <h3>Sorry, the game is full.</h3>\\n  <h1>Try again later.</h1>\\n</div>\\n<div class=\\\"container\\\" *ngIf=\\\"isAnswerWrong\\\">\\n  <h2>Wrong answer.</h2>\\n  <h3>Waiting for the round to end...</h3>\\n</div>\\n<div class=\\\"container\\\" *ngIf=\\\"isRoundOpen && !isAnswerWrong\\\">\\n  <h3>Round #{{round}}</h3>\\n  <h1>{{challenge}}</h1>\\n</div>\\n<div class=\\\"container\\\" *ngIf=\\\"!isAnswerWrong && !isRoundOpen && challenge\\\">\\n  <h2>Round #{{round}} ended.</h2>\\n  <h3>Waiting for the next challenge...</h3>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"isRoundOpen && !isAnswerWrong\\\">\\n    <div class=\\\"col-sm pr-0\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-lg\\\" (click)=\\\"answer(true)\\\">\\n        Correct\\n      </button>\\n    </div>\\n    <div class=\\\"col-sm pl-0\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg\\\" (click)=\\\"answer(false)\\\">\\n        Wrong\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { SocketService } from '../../../services/socket.service';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  private roundSeconds: number;\n  private breakSeconds: number;\n\n  @Input() playerName: string;\n\n  @Output() challenge;\n  @Output() isRoundOpen: boolean;\n  @Output() isGameFull: boolean;\n  @Output() isAnswerWrong: boolean;\n  @Output() progress: number;\n  @Output() round: number;\n  @Output() mySocketId = new EventEmitter<string>();\n\n  constructor(private socketService: SocketService) { }\n\n  ngOnInit() {\n    this.socketService.onStartRound()\n      .subscribe(params => {\n        this.startRound(params['round'], params['challenge']);\n      });\n    this.socketService.onEndRound()\n      .subscribe(() => {\n        this.endRound();\n      });\n    this.socketService.onGameFull()\n      .subscribe(() => {\n        this.isGameFull = true;\n      });\n    this.socketService.onWrongAnswer()\n      .subscribe(() => {\n        this.isAnswerWrong = true;\n      });\n    this.socketService.onGameJoined()\n      .subscribe((params) => {\n        this.roundSeconds = params['roundSeconds'];\n        this.breakSeconds = params['breakSeconds'];\n        this.mySocketId.emit(params['socketId']);\n        this.endRound();\n      });\n    this.socketService.joinGame(this.playerName);\n  }\n\n  answer(answer: boolean) {\n    this.socketService.sendAnswer(answer);\n  }\n\n  startRound(round: number, challenge: string) {\n    this.isRoundOpen = true;\n    this.isAnswerWrong = false;\n    this.round = round;\n    this.challenge = challenge;\n    this.moveProgress(this.roundSeconds, true, round);\n  }\n\n  moveProgress(remainingSeconds: number, isRoundOpen: boolean, myRound: number) {\n    if (isRoundOpen === this.isRoundOpen && myRound === this.round) {\n      const totalSeconds = this.isRoundOpen ? this.roundSeconds : this.breakSeconds;\n      this.progress = (100 / totalSeconds) * remainingSeconds;\n      if (remainingSeconds > 0) {\n        remainingSeconds--;\n        setTimeout(() => this.moveProgress(remainingSeconds, isRoundOpen, myRound), 1000);\n      }\n    }\n  }\n\n  endRound() {\n    this.isAnswerWrong = false;\n    this.isRoundOpen = false;\n    this.moveProgress(this.breakSeconds, false, this.round);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-8 pt-2 pb-2\\\" *ngIf=\\\"headerMessage\\\">\\n    <p>\\n      <ngb-progressbar [type]=\\\"progress < 100 ? 'primary' : 'danger'\\\" [value]=\\\"progress\\\">\\n      </ngb-progressbar>\\n    </p>\\n    <h2>{{headerMessage}}</h2>\\n  </div>\\n  <div class=\\\"col-sm-8\\\" *ngIf=\\\"!headerMessage\\\">\\n    <app-game (mySocketId)=\\\"onMySocketId($event)\\\" [playerName]=\\\"playerName\\\"></app-game>\\n  </div>\\n  <div class=\\\"col-sm-4\\\">\\n    <app-players [mySocketId]=\\\"mySocketId\\\"></app-players>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Output } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { SocketService } from '../../services/socket.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-play',\n  templateUrl: './play.component.html',\n  styleUrls: ['./play.component.css']\n})\nexport class PlayComponent implements OnInit {\n\n  private readonly maxRetries: number = 10;\n  private retriesCount = 0;\n\n  @Output() playerName: string;\n  @Output() mySocketId: string;\n  @Output() progress = 0;\n  @Output() headerMessage = 'Connecting to server...';\n\n  constructor(private socketService: SocketService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.playerName = params['playerName'];\n      if (this.playerName === 'undefined') {\n        this.playerName = null;\n      }\n    });\n    this.socketService.connect();\n    setTimeout(() => this.checkConnection(), 1000);\n  }\n\n  onMySocketId(mySocketId: string) {\n    this.mySocketId = mySocketId;\n  }\n\n  checkConnection() {\n    if (this.socketService.isConnected()) {\n      this.headerMessage = null;\n    } else if (this.retriesCount < this.maxRetries) {\n      this.retriesCount++;\n      this.progress = (100 / this.maxRetries) * this.retriesCount;\n    } else {\n      this.headerMessage = 'Connection failed';\n    }\n    setTimeout(() => this.checkConnection(), 1000);\n  }\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"list-group pt-2 pb-2\\\" *ngIf=\\\"players.length > 0\\\">\\n  <li class=\\\"list-group-item list-group-item-secondary\\\">Scoreboard</li>\\n  <li class=\\\"list-group-item text-left\\\" *ngFor=\\\"let player of players; let i = index\\\" [ngClass]=\\\"{'active' : player.socketId == mySocketId }\\\">\\n    {{i+1}}. {{player.name}}\\n    <span class=\\\"badge badge-warning badge-pill pull-right\\\">{{player.score}}</span>\\n  </li>\\n</ul>\\n\\n<p class=\\\"pt-2 pb-2\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg\\\" routerLink=\\\"\\\" (click)=\\\"exit()\\\">\\n    Exit\\n  </button>\\n</p>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Player } from '../../../models/Player';\nimport { SocketService } from '../../../services/socket.service';\n\n@Component({\n  selector: 'app-players',\n  templateUrl: './players.component.html',\n  styleUrls: ['./players.component.css']\n})\nexport class PlayersComponent implements OnInit {\n\n  players: Player[] = [];\n  @Input() mySocketId: string;\n\n  constructor(private socketService: SocketService) { }\n\n  ngOnInit() {\n    this.socketService.onPlayers()\n      .subscribe(players => {\n        this.players = players;\n        this.players = this.players.sort((a, b) => b.score - a.score);\n      });\n  }\n\n  exit() {\n    if (this.socketService != null) {\n      this.socketService.disconnect();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport * as socketIo from 'socket.io-client';\nimport { Player } from '../models/Player';\n\nimport { ServerConfig } from './server-config';\n\ndeclare var require: any;\nconst config: ServerConfig = require('../../assets/server-config.json');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  private socket;\n\n  constructor() { }\n\n  public connect() {\n    let serverUrl = config.url;\n    if (config.port) {\n      serverUrl += ':' + config.port;\n    }\n    console.log('Connecting to %s', serverUrl);\n    this.socket = socketIo(serverUrl);\n  }\n\n  public isConnected(): boolean {\n    return this.socket.connected;\n  }\n\n  public joinGame(playerName: string) {\n    this.socket.emit('joinGame', playerName);\n  }\n\n  public sendAnswer(answer: boolean) {\n    if (this.socket != null) {\n      this.socket.emit('answer', answer);\n    } else {\n      console.log('Error: send failed because socket is not initialized');\n    }\n  }\n\n  public disconnect() {\n    if (this.socket != null) {\n      this.socket.disconnect();\n    } else {\n      console.log('Error: disconnect failed because socket is not initialized');\n    }\n  }\n\n  public onStartRound(): Observable<{ round: number, challenge: string }> {\n    return new Observable<{ round: number, challenge: string }>(observer => {\n      this.socket.on('startRound', (round: number, challenge: string) => observer.next({ round, challenge }));\n    });\n  }\n\n  public onEndRound(): Observable<string> {\n    return new Observable<string>(observer => {\n      this.socket.on('endRound', () => observer.next());\n    });\n  }\n\n  public onGameFull(): Observable<string> {\n    return new Observable<string>(observer => {\n      this.socket.on('gameFull', () => observer.next());\n    });\n  }\n\n  public onWrongAnswer(): Observable<string> {\n    return new Observable<string>(observer => {\n      this.socket.on('wrongAnswer', () => observer.next());\n    });\n  }\n\n  public onGameJoined(): Observable<{ roundSeconds: number, breakSeconds: number, socketId: string }> {\n    return new Observable<{ roundSeconds: number, breakSeconds: number, socketId: string }>(observer => {\n      this.socket.on('gameJoined', (roundSeconds: number, breakSeconds: number, socketId: string) =>\n        observer.next({ roundSeconds, breakSeconds, socketId }));\n    });\n  }\n\n  public onPlayers(): Observable<Player[]> {\n    return new Observable<Player[]>(observer => {\n      this.socket.on('players', (players: Player[]) => observer.next(players));\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}